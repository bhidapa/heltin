parser: '@typescript-eslint/parser'
parserOptions:
  warnOnUnsupportedTypeScriptVersion: false
plugins:
  - '@typescript-eslint'
  - prettier
  - react
extends:
  - 'eslint:recommended'
  - 'plugin:prettier/recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:compat/recommended'
  - 'plugin:react/recommended'
env:
  browser: true
settings:
  react:
    version: 'detect'
rules:
  # general
  'no-console': 'error'

  # prettier
  'prettier/prettier': 'error'

  # TypeScript
  '@typescript-eslint/indent': 'off'
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/no-non-null-assertion': 'off'
  '@typescript-eslint/camelcase': 'off'
  '@typescript-eslint/class-name-casing': 'off'
  '@typescript-eslint/no-unused-vars': 'off'
  '@typescript-eslint/no-empty-interface': 'off'
  '@typescript-eslint/explicit-member-accessibility': 'off'
  '@typescript-eslint/no-explicit-any': 'off'
  '@typescript-eslint/no-var-requires': 'off'
  '@typescript-eslint/no-use-before-define':
    - error
    - functions: false
  '@typescript-eslint/no-empty-function': 'off' # sometimes necessary
  '@typescript-eslint/explicit-module-boundary-types': 'off'
  # sometimes type assertion is neccessary and TypeScript will disallow it if it does not fit
  '@typescript-eslint/no-object-literal-type-assertion': 'off'
  '@typescript-eslint/ban-ts-comment':
    - error
    - 'ts-expect-error': 'allow-with-description'
      'ts-ignore': 'allow-with-description'

  # react
  'react/no-unescaped-entities': 'off'
  'react/prop-types': 'off'
  'react/no-array-index-key': 'error'
  'react/no-multi-comp': 'off'
  'react/jsx-no-target-blank': 'off'

  # relay
  'relay/unused-fields': 'off'
  'relay/generated-flow-types': 'off' # disabled because the check is a false positive for TS
  'relay/must-colocate-fragment-spreads': 'off'
